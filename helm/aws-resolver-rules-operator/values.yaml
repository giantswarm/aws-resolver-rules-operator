aws:
  accessKeyID: accesskey
  secretAccessKey: secretkey
  region: region

image:
  registry: gsoci.azurecr.io
  name: giantswarm/aws-resolver-rules-operator
  tag: ""
  pullPolicy: IfNotPresent

pod:
  user:
    id: "1000"
  group:
    id: "1000"

# This is intended for use during acceptance tests as the resolver
# rules controllers currently don't have any tests and we don't want to
# enable them. This should be removed when we implement those tests
disableResolverControllers: false

# AWS account id where the DNS server is deployed.
dnsServerAWSAccountId: ""

# AWS region where the DNS server is deployed.
dnsServerRegion: ""

# AWS VPC id where the DNS server is deployed.
dnsServerVpcId: ""

# ARN for the IAM Role assumed to associate the Resolver Rule to the DNS server AWS account.
dnsServerIAMRoleARN: ""

# AWS external id used to be able to assume the IAM Role used by the DNS server.
dnsServerIAMRoleExternalId: ""

# Base domain used for the workload clusters created on the MC where this controller is deployed.
# Normally we prepend the workload cluster name to this, i.e. my-cluster.${baseDomain}
baseDomain: ""

managementClusterName: ""
managementClusterNamespace: ""

# Add seccomp to pod security context
podSecurityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

# Add seccomp to container security context
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  seccompProfile:
    type: RuntimeDefault
  capabilities:
    drop:
      - ALL

global:
  podSecurityStandards:
    enforced: false

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "resource.default.name"  . }}
  namespace: {{ include "resource.default.namespace"  . }}
  labels:
  {{- include "labels.common" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
  {{- include "labels.selector" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        releaseRevision: {{ .Release.Revision | quote }}
      labels:
    {{- include "labels.selector" . | nindent 8 }}
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
            weight: 10
      serviceAccountName: {{ include "resource.default.name"  . }}
      securityContext:
        runAsUser: {{ .Values.pod.user.id }}
        runAsGroup: {{ .Values.pod.group.id }}
        {{- with .Values.podSecurityContext }}
          {{- . | toYaml | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ default .Chart.Version .Values.image.tag }}"
          env:
            - name: MANAGEMENT_CLUSTER_REGION
              value: {{ .Values.managementClusterRegion }}
            - name: AWS_SHARED_CREDENTIALS_FILE
              value: /home/.aws/credentials
          command:
            - /manager
          args:
            - --leader-elect
            - --dns-server-aws-account-id={{ .Values.dnsServerAWSAccountId }}
            - --dns-server-iam-role-arn={{ .Values.dnsServerIAMRoleARN }}
            - --dns-server-iam-role-external-id={{ .Values.dnsServerIAMRoleExternalId }}
            - --dns-server-region={{ .Values.dnsServerRegion }}
            - --dns-server-vpc-id={{ .Values.dnsServerVpcId }}
            - --management-cluster-namespace={{ .Values.managementClusterNamespace }}
            - --management-cluster-name={{ .Values.managementClusterName  }}
            - --basedomain={{ .Values.baseDomain }}
            {{- if .Values.disableResolverControllers }}
            - --disable-resolver-controllers
            {{- end }}
          securityContext:
            {{- with .Values.securityContext }}
              {{- . | toYaml | nindent 12 }}
            {{- end }}
          resources:
            requests:
              cpu: 100m
              memory: 50Mi
            limits:
              cpu: 100m
              memory: 80Mi
          volumeMounts:
            - mountPath: /home/.aws
              name: credentials
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: "node.cluster.x-k8s.io/uninitialized"
        operator: "Exists"
      volumes:
        - name: credentials
          secret:
            secretName: {{ include "resource.default.name" . }}-aws-credentials
